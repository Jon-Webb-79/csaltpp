Search.setIndex({"alltitles": {"Addition": [[0, "addition"]], "CMake Build Instructions": [[3, "cmake-build-instructions"]], "Constructors": [[0, "constructors"], [0, "id6"], [0, "id10"]], "Core Features": [[3, "core-features"]], "Cross Product": [[2, "cross-product"]], "Data Access Methods": [[0, "data-access-methods"], [0, "id8"], [0, "id12"]], "Dense Matrix": [[3, "dense-matrix"]], "DenseMatrix * DenseMatrix": [[0, "densematrix-densematrix"]], "DenseMatrix Copy Constructor": [[0, "densematrix-copy-constructor"]], "DenseMatrix Identify Constructor": [[0, "densematrix-identify-constructor"]], "DenseMatrix Move Constructor": [[0, "densematrix-move-constructor"]], "DenseMatrix(const std::array<T, N>& arr, std::size_t r, std::size_t c)": [[0, "densematrix-const-std-array-t-n-arr-std-size-t-r-std-size-t-c"]], "DenseMatrix(const std::array<std::array<T, Cols>, Rows& arr)": [[0, "densematrix-const-std-array-std-array-t-cols-rows-arr"]], "DenseMatrix(const std::vector<T>& flat_data, std::size_t r, std::size_t c)": [[0, "densematrix-const-std-vector-t-flat-data-std-size-t-r-std-size-t-c"]], "DenseMatrix(std::initializer_list<std::initializer_list<T>> init_list)": [[0, "densematrix-std-initializer-list-std-initializer-list-t-init-list"]], "DenseMatrix(std::size_t, std::size_t)": [[0, "densematrix-std-size-t-std-size-t"]], "DenseMatrix(std::size_t, std::size_t, T)": [[0, "densematrix-std-size-t-std-size-t-t"]], "DenseMatrix(std:vector<std::vector<T>>& vec)": [[0, "densematrix-std-vector-std-vector-t-vec"]], "DenseMatrix<T>": [[0, "densematrix-t"]], "Dependencies": [[3, "dependencies"]], "Development & Contribution": [[3, "development-contribution"]], "Documentation": [[3, "documentation"]], "Dot Product": [[2, "dot-product"]], "Getting Started": [[3, "getting-started"]], "Global Operators": [[0, "global-operators"]], "Indices and tables": [[3, "indices-and-tables"]], "Key Features": [[0, "key-features"]], "License": [[3, "license"]], "Matrix Manager (Planned)": [[3, "matrix-manager-planned"]], "Matrix Muultiplication": [[0, "matrix-muultiplication"]], "Matrix Overview": [[0, null]], "MatrixBase<T>": [[0, "matrixbase-t"]], "Modules:": [[3, null]], "Multiplication": [[0, "multiplication"]], "Operations": [[0, "operations"], [0, "id9"], [0, "id13"]], "Operator Overloads": [[0, "operator-overloads"], [0, "id7"], [0, "id11"]], "Run Unit Tests": [[3, "run-unit-tests"]], "SIMD Operations": [[1, "simd-operations"]], "SIMD Traits": [[1, "simd-traits"]], "SIMD Utilities": [[1, null]], "Scalar * DenseMatrix": [[0, "id15"]], "Scalar + DenseMatrix": [[0, "scalar-densematrix"]], "Scalar - DenseMatrix": [[0, "id14"]], "Sparse Formats (Planned)": [[3, "sparse-formats-planned"]], "SparseCOOMatrix<T>": [[0, "sparsecoomatrix-t"]], "SparseCSRMatrix<T>": [[0, "sparsecsrmatrix-t"]], "Subtraction": [[0, "subtraction"]], "Typical Use Cases": [[3, "typical-use-cases"]], "Use Cases": [[0, "use-cases"]], "Vector Operations": [[2, null]], "Welcome to CSalt++ documentation!": [[3, null]], "Why CSalt++": [[3, "why-csalt"]], "clonse()": [[0, "clonse"]], "cols()": [[0, "cols"]], "data_ptr()": [[0, "data-ptr"]], "get()": [[0, "get"]], "init_ptr()": [[0, "init-ptr"]], "inverse": [[0, "inverse"]], "is_initialized()": [[0, "is-initialized"]], "nonzero_count()": [[0, "nonzero-count"]], "operator()": [[0, "id1"]], "operator*": [[0, "id4"]], "operator+": [[0, "id2"]], "operator-": [[0, "id3"]], "operator/": [[0, "id5"]], "operator=": [[0, "operator"]], "print()": [[0, "print"]], "remove()": [[0, "remove"]], "rows()": [[0, "rows"]], "set()": [[0, "set"]], "size()": [[0, "size"]], "tranpose()": [[0, "tranpose"]], "update()": [[0, "update"]]}, "docnames": ["Matrix", "Simd", "Vector", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["Matrix.rst", "Simd.rst", "Vector.rst", "index.rst"], "indexentries": {"densematrix::operator() (c++ function)": [[0, "_CPPv4N11DenseMatrixclENSt6size_tENSt6size_tE", false], [0, "_CPPv4NK11DenseMatrixclENSt6size_tENSt6size_tE", false]], "mat_mul (c++ function)": [[0, "_CPPv4I0E7mat_mul11DenseMatrixI1TERK11DenseMatrixI1TERK11DenseMatrixI1TE", false]], "operator* (c++ function)": [[0, "_CPPv4I0Eml11DenseMatrixI1TE1TRK11DenseMatrixI1TE", false]], "operator+ (c++ function)": [[0, "_CPPv4I0Epl11DenseMatrixI1TE1TRK11DenseMatrixI1TE", false]], "operator- (c++ function)": [[0, "_CPPv4I0Emi11DenseMatrixI1TE1TRK11DenseMatrixI1TE", false]], "slt::densematrix (c++ class)": [[0, "_CPPv4I0EN3slt11DenseMatrixE", false]], "slt::densematrix::clone (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix5cloneEv", false]], "slt::densematrix::cols (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix4colsEv", false]], "slt::densematrix::data_ptr (c++ function)": [[0, "_CPPv4N3slt11DenseMatrix8data_ptrEv", false], [0, "_CPPv4NK3slt11DenseMatrix8data_ptrEv", false]], "slt::densematrix::densematrix (c++ function)": [[0, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", false], [0, "_CPPv4I_NSt6size_tE_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayINSt5arrayI1T4ColsEE4RowsEE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt16initializer_listINSt16initializer_listI1TEEEE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE1T", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixERK11DenseMatrixI1TE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorI1TEENSt6size_tENSt6size_tE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorINSt6vectorI1TEEEE", false], [0, "_CPPv4N3slt11DenseMatrix11DenseMatrixERR11DenseMatrixI1TE", false]], "slt::densematrix::get (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix3getENSt6size_tENSt6size_tE", false]], "slt::densematrix::init_ptr (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix8init_ptrEv", false]], "slt::densematrix::inverse (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix7inverseEv", false]], "slt::densematrix::is_initialized (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix14is_initializedENSt6size_tENSt6size_tE", false]], "slt::densematrix::nonzero_count (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix13nonzero_countEv", false]], "slt::densematrix::operator* (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrixmlE1T", false], [0, "_CPPv4NK3slt11DenseMatrixmlERK11DenseMatrix", false]], "slt::densematrix::operator+ (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrixplE1T", false], [0, "_CPPv4NK3slt11DenseMatrixplERK11DenseMatrix", false]], "slt::densematrix::operator- (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrixmiE1T", false], [0, "_CPPv4NK3slt11DenseMatrixmiERK11DenseMatrix", false]], "slt::densematrix::operator/ (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrixdvE1T", false]], "slt::densematrix::operator= (c++ function)": [[0, "_CPPv4N3slt11DenseMatrixaSERK11DenseMatrixI1TE", false], [0, "_CPPv4N3slt11DenseMatrixaSERR11DenseMatrixI1TE", false]], "slt::densematrix::print (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix5printERNSt7ostreamE", false]], "slt::densematrix::remove (c++ function)": [[0, "_CPPv4N3slt11DenseMatrix6removeENSt6size_tENSt6size_tE", false]], "slt::densematrix::rows (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix4rowsEv", false]], "slt::densematrix::set (c++ function)": [[0, "_CPPv4N3slt11DenseMatrix3setENSt6size_tENSt6size_tE1T", false]], "slt::densematrix::size (c++ function)": [[0, "_CPPv4NK3slt11DenseMatrix4sizeEv", false]], "slt::densematrix::transpose (c++ function)": [[0, "_CPPv4N3slt11DenseMatrix9transposeEv", false]], "slt::densematrix::update (c++ function)": [[0, "_CPPv4N3slt11DenseMatrix6updateENSt6size_tENSt6size_tE1T", false]], "slt::matrixbase (c++ class)": [[0, "_CPPv4I0EN3slt10MatrixBaseE", false]], "slt::matrixbase::clone (c++ function)": [[0, "_CPPv4NK3slt10MatrixBase5cloneEv", false]], "slt::matrixbase::cols (c++ function)": [[0, "_CPPv4NK3slt10MatrixBase4colsEv", false]], "slt::matrixbase::get (c++ function)": [[0, "_CPPv4NK3slt10MatrixBase3getENSt6size_tENSt6size_tE", false]], "slt::matrixbase::is_initialized (c++ function)": [[0, "_CPPv4NK3slt10MatrixBase14is_initializedENSt6size_tENSt6size_tE", false]], "slt::matrixbase::rows (c++ function)": [[0, "_CPPv4NK3slt10MatrixBase4rowsEv", false]], "slt::matrixbase::set (c++ function)": [[0, "_CPPv4N3slt10MatrixBase3setENSt6size_tENSt6size_tE1T", false]], "slt::matrixbase::~matrixbase (c++ function)": [[0, "_CPPv4N3slt10MatrixBaseD0Ev", false]]}, "objects": {"": [[0, 0, 1, "_CPPv4N11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()"], [0, 0, 1, "_CPPv4NK11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()"], [0, 1, 1, "_CPPv4N11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()::c"], [0, 1, 1, "_CPPv4NK11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()::c"], [0, 1, 1, "_CPPv4N11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()::r"], [0, 1, 1, "_CPPv4NK11DenseMatrixclENSt6size_tENSt6size_tE", "DenseMatrix::operator()::r"], [2, 0, 1, "_CPPv4I0E5crossNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEE", "cross"], [2, 0, 1, "_CPPv4I0E5crossNSt6vectorI1TEERKNSt6vectorI1TEERKNSt6vectorI1TEE", "cross"], [2, 0, 1, "_CPPv4I0E5crossvAL3E_K1TAL3E_K1TAL3E_1T", "cross"], [2, 2, 1, "_CPPv4I0E5crossNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEE", "cross::T"], [2, 2, 1, "_CPPv4I0E5crossNSt6vectorI1TEERKNSt6vectorI1TEERKNSt6vectorI1TEE", "cross::T"], [2, 2, 1, "_CPPv4I0E5crossvAL3E_K1TAL3E_K1TAL3E_1T", "cross::T"], [2, 1, 1, "_CPPv4I0E5crossNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEE", "cross::a"], [2, 1, 1, "_CPPv4I0E5crossNSt6vectorI1TEERKNSt6vectorI1TEERKNSt6vectorI1TEE", "cross::a"], [2, 1, 1, "_CPPv4I0E5crossvAL3E_K1TAL3E_K1TAL3E_1T", "cross::a"], [2, 1, 1, "_CPPv4I0E5crossNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEERKNSt5arrayI1TXL3EEEE", "cross::b"], [2, 1, 1, "_CPPv4I0E5crossNSt6vectorI1TEERKNSt6vectorI1TEERKNSt6vectorI1TEE", "cross::b"], [2, 1, 1, "_CPPv4I0E5crossvAL3E_K1TAL3E_K1TAL3E_1T", "cross::b"], [2, 1, 1, "_CPPv4I0E5crossvAL3E_K1TAL3E_K1TAL3E_1T", "cross::result"], [2, 0, 1, "_CPPv43dotPK1TPK1TNSt6size_tE", "dot"], [2, 0, 1, "_CPPv43dotRKNSt5arrayI1T1NEERKNSt5arrayI1T1NEE", "dot"], [2, 0, 1, "_CPPv43dotRKNSt6vectorI1TEERKNSt6vectorI1TEE", "dot"], [2, 1, 1, "_CPPv43dotPK1TPK1TNSt6size_tE", "dot::a"], [2, 1, 1, "_CPPv43dotRKNSt5arrayI1T1NEERKNSt5arrayI1T1NEE", "dot::a"], [2, 1, 1, "_CPPv43dotRKNSt6vectorI1TEERKNSt6vectorI1TEE", "dot::a"], [2, 1, 1, "_CPPv43dotPK1TPK1TNSt6size_tE", "dot::b"], [2, 1, 1, "_CPPv43dotRKNSt5arrayI1T1NEERKNSt5arrayI1T1NEE", "dot::b"], [2, 1, 1, "_CPPv43dotRKNSt6vectorI1TEERKNSt6vectorI1TEE", "dot::b"], [2, 1, 1, "_CPPv43dotPK1TPK1TNSt6size_tE", "dot::size"], [0, 0, 1, "_CPPv4I0E7mat_mul11DenseMatrixI1TERK11DenseMatrixI1TERK11DenseMatrixI1TE", "mat_mul"], [0, 1, 1, "_CPPv4I0E7mat_mul11DenseMatrixI1TERK11DenseMatrixI1TERK11DenseMatrixI1TE", "mat_mul::A"], [0, 1, 1, "_CPPv4I0E7mat_mul11DenseMatrixI1TERK11DenseMatrixI1TERK11DenseMatrixI1TE", "mat_mul::B"], [0, 2, 1, "_CPPv4I0E7mat_mul11DenseMatrixI1TERK11DenseMatrixI1TERK11DenseMatrixI1TE", "mat_mul::T"], [0, 0, 1, "_CPPv4I0Eml11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator*"], [0, 2, 1, "_CPPv4I0Eml11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator*::T"], [0, 1, 1, "_CPPv4I0Eml11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator*::matrix"], [0, 1, 1, "_CPPv4I0Eml11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator*::scalar"], [0, 0, 1, "_CPPv4I0Epl11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator+"], [0, 2, 1, "_CPPv4I0Epl11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator+::T"], [0, 1, 1, "_CPPv4I0Epl11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator+::matrix"], [0, 1, 1, "_CPPv4I0Epl11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator+::scalar"], [0, 0, 1, "_CPPv4I0Emi11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator-"], [0, 2, 1, "_CPPv4I0Emi11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator-::T"], [0, 1, 1, "_CPPv4I0Emi11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator-::matrix"], [0, 1, 1, "_CPPv4I0Emi11DenseMatrixI1TE1TRK11DenseMatrixI1TE", "operator-::scalar"], [1, 3, 1, "_CPPv4I0E8simd_ops", "simd_ops"], [1, 2, 1, "_CPPv4I0E8simd_ops", "simd_ops::T"], [1, 3, 1, "_CPPv4IE8simd_opsIdE", "simd_ops&lt;double&gt;"], [1, 0, 1, "_CPPv4N8simd_opsIdE3addEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::add"], [1, 1, 1, "_CPPv4N8simd_opsIdE3addEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::add::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE3addEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::add::b"], [1, 1, 1, "_CPPv4N8simd_opsIdE3addEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::add::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE3addEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::add::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE10add_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::add_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10add_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::add_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE10add_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::add_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE10add_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::add_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10add_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::add_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE10div_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::div_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10div_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::div_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE10div_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::div_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE10div_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::div_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10div_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::div_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE3mulEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::mul"], [1, 1, 1, "_CPPv4N8simd_opsIdE3mulEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::mul::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE3mulEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::mul::b"], [1, 1, 1, "_CPPv4N8simd_opsIdE3mulEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::mul::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE3mulEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::mul::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE10mul_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::mul_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10mul_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::mul_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE10mul_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::mul_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE10mul_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::mul_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10mul_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::mul_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE3subEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::sub"], [1, 1, 1, "_CPPv4N8simd_opsIdE3subEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::sub::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE3subEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::sub::b"], [1, 1, 1, "_CPPv4N8simd_opsIdE3subEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::sub::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE3subEPKdPKdPdNSt6size_tE", "simd_ops&lt;double&gt;::sub::size"], [1, 0, 1, "_CPPv4N8simd_opsIdE10sub_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::sub_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10sub_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::sub_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIdE10sub_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::sub_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIdE10sub_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::sub_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIdE10sub_scalarEPKddPdNSt6size_tE", "simd_ops&lt;double&gt;::sub_scalar::size"], [1, 3, 1, "_CPPv4IE8simd_opsIfE", "simd_ops&lt;float&gt;"], [1, 0, 1, "_CPPv4N8simd_opsIfE3addEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::add"], [1, 1, 1, "_CPPv4N8simd_opsIfE3addEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::add::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE3addEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::add::b"], [1, 1, 1, "_CPPv4N8simd_opsIfE3addEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::add::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE3addEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::add::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE10add_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::add_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10add_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::add_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE10add_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::add_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE10add_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::add_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10add_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::add_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE10div_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::div_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10div_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::div_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE10div_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::div_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE10div_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::div_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10div_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::div_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE3mulEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::mul"], [1, 1, 1, "_CPPv4N8simd_opsIfE3mulEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::mul::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE3mulEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::mul::b"], [1, 1, 1, "_CPPv4N8simd_opsIfE3mulEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::mul::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE3mulEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::mul::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE10mul_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::mul_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10mul_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::mul_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE10mul_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::mul_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE10mul_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::mul_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10mul_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::mul_scalar::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE3subEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::sub"], [1, 1, 1, "_CPPv4N8simd_opsIfE3subEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::sub::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE3subEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::sub::b"], [1, 1, 1, "_CPPv4N8simd_opsIfE3subEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::sub::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE3subEPKfPKfPfNSt6size_tE", "simd_ops&lt;float&gt;::sub::size"], [1, 0, 1, "_CPPv4N8simd_opsIfE10sub_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::sub_scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10sub_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::sub_scalar::a"], [1, 1, 1, "_CPPv4N8simd_opsIfE10sub_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::sub_scalar::result"], [1, 1, 1, "_CPPv4N8simd_opsIfE10sub_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::sub_scalar::scalar"], [1, 1, 1, "_CPPv4N8simd_opsIfE10sub_scalarEPKffPfNSt6size_tE", "simd_ops&lt;float&gt;::sub_scalar::size"], [1, 3, 1, "_CPPv4I0E11simd_traits", "simd_traits"], [1, 2, 1, "_CPPv4I0E11simd_traits", "simd_traits::T"], [1, 4, 1, "_CPPv4N11simd_traits9supportedE", "simd_traits::supported"], [1, 4, 1, "_CPPv4N11simd_traits5widthE", "simd_traits::width"], [1, 3, 1, "_CPPv4IE11simd_traitsIdE", "simd_traits&lt;double&gt;"], [1, 3, 1, "_CPPv4IE11simd_traitsIfE", "simd_traits&lt;float&gt;"], [0, 3, 1, "_CPPv4I0EN3slt11DenseMatrixE", "slt::DenseMatrix"], [0, 0, 1, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayINSt5arrayI1T4ColsEE4RowsEE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt16initializer_listINSt16initializer_listI1TEEEE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERK11DenseMatrixI1TE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorI1TEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorINSt6vectorI1TEEEE", "slt::DenseMatrix::DenseMatrix"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERR11DenseMatrixI1TE", "slt::DenseMatrix::DenseMatrix"], [0, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayINSt5arrayI1T4ColsEE4RowsEE", "slt::DenseMatrix::DenseMatrix::Cols"], [0, 2, 1, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::N"], [0, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayINSt5arrayI1T4ColsEE4RowsEE", "slt::DenseMatrix::DenseMatrix::Rows"], [0, 1, 1, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::arr"], [0, 1, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayINSt5arrayI1T4ColsEE4RowsEE", "slt::DenseMatrix::DenseMatrix::arr"], [0, 1, 1, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::c"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::c"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::DenseMatrix::c"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorI1TEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::c"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorI1TEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::flat_data"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt16initializer_listINSt16initializer_listI1TEEEE", "slt::DenseMatrix::DenseMatrix::init_list"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tE", "slt::DenseMatrix::DenseMatrix::n"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERK11DenseMatrixI1TE", "slt::DenseMatrix::DenseMatrix::other"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERR11DenseMatrixI1TE", "slt::DenseMatrix::DenseMatrix::other"], [0, 1, 1, "_CPPv4I_NSt6size_tEEN3slt11DenseMatrix11DenseMatrixERKNSt5arrayI1T1NEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::r"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::r"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::DenseMatrix::r"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorI1TEENSt6size_tENSt6size_tE", "slt::DenseMatrix::DenseMatrix::r"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::DenseMatrix::value"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix11DenseMatrixERKNSt6vectorINSt6vectorI1TEEEE", "slt::DenseMatrix::DenseMatrix::vec"], [0, 2, 1, "_CPPv4I0EN3slt11DenseMatrixE", "slt::DenseMatrix::T"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix5cloneEv", "slt::DenseMatrix::clone"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix4colsEv", "slt::DenseMatrix::cols"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix8data_ptrEv", "slt::DenseMatrix::data_ptr"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix8data_ptrEv", "slt::DenseMatrix::data_ptr"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix3getENSt6size_tENSt6size_tE", "slt::DenseMatrix::get"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrix3getENSt6size_tENSt6size_tE", "slt::DenseMatrix::get::col"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrix3getENSt6size_tENSt6size_tE", "slt::DenseMatrix::get::row"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix8init_ptrEv", "slt::DenseMatrix::init_ptr"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix7inverseEv", "slt::DenseMatrix::inverse"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix14is_initializedENSt6size_tENSt6size_tE", "slt::DenseMatrix::is_initialized"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrix14is_initializedENSt6size_tENSt6size_tE", "slt::DenseMatrix::is_initialized::col"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrix14is_initializedENSt6size_tENSt6size_tE", "slt::DenseMatrix::is_initialized::row"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix13nonzero_countEv", "slt::DenseMatrix::nonzero_count"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixmlE1T", "slt::DenseMatrix::operator*"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixmlERK11DenseMatrix", "slt::DenseMatrix::operator*"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixmlERK11DenseMatrix", "slt::DenseMatrix::operator*::other"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixmlE1T", "slt::DenseMatrix::operator*::scalar"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixplE1T", "slt::DenseMatrix::operator+"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixplERK11DenseMatrix", "slt::DenseMatrix::operator+"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixplERK11DenseMatrix", "slt::DenseMatrix::operator+::other"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixplE1T", "slt::DenseMatrix::operator+::scalar"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixmiE1T", "slt::DenseMatrix::operator-"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixmiERK11DenseMatrix", "slt::DenseMatrix::operator-"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixmiERK11DenseMatrix", "slt::DenseMatrix::operator-::other"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixmiE1T", "slt::DenseMatrix::operator-::scalar"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrixdvE1T", "slt::DenseMatrix::operator/"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrixdvE1T", "slt::DenseMatrix::operator/::scalar"], [0, 0, 1, "_CPPv4N3slt11DenseMatrixaSERK11DenseMatrixI1TE", "slt::DenseMatrix::operator="], [0, 0, 1, "_CPPv4N3slt11DenseMatrixaSERR11DenseMatrixI1TE", "slt::DenseMatrix::operator="], [0, 1, 1, "_CPPv4N3slt11DenseMatrixaSERK11DenseMatrixI1TE", "slt::DenseMatrix::operator=::other"], [0, 1, 1, "_CPPv4N3slt11DenseMatrixaSERR11DenseMatrixI1TE", "slt::DenseMatrix::operator=::other"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix5printERNSt7ostreamE", "slt::DenseMatrix::print"], [0, 1, 1, "_CPPv4NK3slt11DenseMatrix5printERNSt7ostreamE", "slt::DenseMatrix::print::os"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix6removeENSt6size_tENSt6size_tE", "slt::DenseMatrix::remove"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix6removeENSt6size_tENSt6size_tE", "slt::DenseMatrix::remove::col"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix6removeENSt6size_tENSt6size_tE", "slt::DenseMatrix::remove::row"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix4rowsEv", "slt::DenseMatrix::rows"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix3setENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::set"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix3setENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::set::col"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix3setENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::set::row"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix3setENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::set::value"], [0, 0, 1, "_CPPv4NK3slt11DenseMatrix4sizeEv", "slt::DenseMatrix::size"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix9transposeEv", "slt::DenseMatrix::transpose"], [0, 0, 1, "_CPPv4N3slt11DenseMatrix6updateENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::update"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix6updateENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::update::col"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix6updateENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::update::row"], [0, 1, 1, "_CPPv4N3slt11DenseMatrix6updateENSt6size_tENSt6size_tE1T", "slt::DenseMatrix::update::value"], [0, 3, 1, "_CPPv4I0EN3slt10MatrixBaseE", "slt::MatrixBase"], [0, 2, 1, "_CPPv4I0EN3slt10MatrixBaseE", "slt::MatrixBase::T"], [0, 0, 1, "_CPPv4NK3slt10MatrixBase5cloneEv", "slt::MatrixBase::clone"], [0, 0, 1, "_CPPv4NK3slt10MatrixBase4colsEv", "slt::MatrixBase::cols"], [0, 0, 1, "_CPPv4NK3slt10MatrixBase3getENSt6size_tENSt6size_tE", "slt::MatrixBase::get"], [0, 1, 1, "_CPPv4NK3slt10MatrixBase3getENSt6size_tENSt6size_tE", "slt::MatrixBase::get::col"], [0, 1, 1, "_CPPv4NK3slt10MatrixBase3getENSt6size_tENSt6size_tE", "slt::MatrixBase::get::row"], [0, 0, 1, "_CPPv4NK3slt10MatrixBase14is_initializedENSt6size_tENSt6size_tE", "slt::MatrixBase::is_initialized"], [0, 1, 1, "_CPPv4NK3slt10MatrixBase14is_initializedENSt6size_tENSt6size_tE", "slt::MatrixBase::is_initialized::col"], [0, 1, 1, "_CPPv4NK3slt10MatrixBase14is_initializedENSt6size_tENSt6size_tE", "slt::MatrixBase::is_initialized::row"], [0, 0, 1, "_CPPv4NK3slt10MatrixBase4rowsEv", "slt::MatrixBase::rows"], [0, 0, 1, "_CPPv4N3slt10MatrixBase3setENSt6size_tENSt6size_tE1T", "slt::MatrixBase::set"], [0, 1, 1, "_CPPv4N3slt10MatrixBase3setENSt6size_tENSt6size_tE1T", "slt::MatrixBase::set::col"], [0, 1, 1, "_CPPv4N3slt10MatrixBase3setENSt6size_tENSt6size_tE1T", "slt::MatrixBase::set::row"], [0, 1, 1, "_CPPv4N3slt10MatrixBase3setENSt6size_tENSt6size_tE1T", "slt::MatrixBase::set::value"], [0, 0, 1, "_CPPv4N3slt10MatrixBaseD0Ev", "slt::MatrixBase::~MatrixBase"]]}, "objnames": {"0": ["cpp", "function", "C++ function"], "1": ["cpp", "functionParam", "C++ function parameter"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "member", "C++ member"]}, "objtypes": {"0": "cpp:function", "1": "cpp:functionParam", "2": "cpp:templateParam", "3": "cpp:class", "4": "cpp:member"}, "terms": {"": 0, "0": [0, 2, 3], "0f": [0, 2], "1": [0, 1, 2, 3], "10": [0, 3], "11": [], "12": [], "13": [], "139": [], "14": 3, "14f": 0, "154": [], "16": 3, "17": 3, "18": [], "19": 0, "1d": 0, "2": [0, 2, 3], "20": [], "22": 0, "23": [], "2d": 0, "2f": 0, "2x2": [], "2x4": [], "3": [0, 2, 3], "30": [], "31": 3, "32": 2, "3d": 2, "3f": 0, "3x3": [], "4": [0, 2], "40": [], "42": 0, "43": [], "4x5": [], "5": [0, 2], "50": [], "56": [], "58": [], "5f": 0, "6": [0, 2, 3], "64": [], "7": 0, "71f": 0, "79": 3, "8": 0, "81": [], "81f": [], "9": 0, "A": [0, 1, 2], "For": 0, "If": [0, 2], "In": [], "It": [0, 2, 3], "No": [2, 3], "That": [], "The": [0, 1, 2, 3], "Their": 2, "These": [1, 2], "_": [], "a_": [], "a_1": 2, "a_2": 2, "a_3": 2, "a_i": 2, "absolut": [], "abstract": 0, "acceler": [0, 1, 2, 3], "access": 3, "accident": [], "account": [], "act": 0, "activ": 3, "actual": [], "ad": 0, "adapt": [0, 3], "add": [0, 1, 3], "add_scalar": 1, "addit": 1, "address": 3, "advanc": 1, "affect": 0, "after": 0, "against": [], "agnost": 3, "algebra": [0, 2], "algorithm": 0, "all": 0, "alloc": [], "allow": [0, 3], "along": [], "alreadi": 0, "also": [2, 3], "alwai": [], "an": 0, "ani": [0, 3], "anoth": 0, "api": 3, "append": [], "appli": [0, 2], "applic": [0, 2, 3], "appropri": 0, "approxim": 0, "ar": [0, 1, 2, 3], "architectur": 0, "area": 2, "argument": [], "arithmet": [0, 1, 3], "around": 0, "arr": [], "arrai": [1, 2, 3], "assert": [0, 2], "assign": 0, "assum": 0, "attempt": [], "auto": [0, 2], "automat": [0, 3], "avail": 0, "avoid": 0, "avx": 1, "awar": 0, "a\u1d62": 2, "b": [0, 1, 2], "b_": [], "b_1": 2, "b_2": 2, "b_3": 2, "b_i": 2, "bad_alloc": [], "base": [0, 1, 3], "bash": 3, "basic": [0, 1], "becaus": [], "becom": [], "been": 0, "befor": [], "begin": [0, 2], "being": 0, "best": 3, "between": [0, 3], "bin": 3, "binari": [], "bind": 0, "block": 0, "bmatrix": 2, "bool": [0, 1], "both": [0, 2], "bound": 0, "brace": 0, "branch": 3, "buffer": 0, "built": [0, 3], "bulk": [], "b\u1d62": 2, "c": [2, 3], "c_": [], "calcul": 3, "call": 2, "can": [0, 3], "cannot": 0, "capabl": 1, "cast": 0, "cd": 3, "cdot": 2, "cfd": 3, "challeng": 3, "chang": [0, 3], "check": [0, 3], "choos": 3, "clang": 3, "class": [0, 1, 3], "clear": 0, "clone": [0, 3], "cmocka": 3, "cnst": [], "code": 3, "code_dev": [], "col": [], "column": 0, "com": 3, "common": 0, "commut": [], "compar": [], "comparison": [], "compil": [0, 1, 2, 3], "complet": [], "compress": [0, 3], "comput": [0, 2, 3], "const": [1, 2], "constexpr": 1, "constrain": 2, "construct": 0, "constructor": [], "contain": [0, 2, 3], "content": 0, "context": [], "contigu": 0, "contract": 0, "contribut": [], "convers": 3, "convert": 3, "coo": 3, "coomatrix": [0, 3], "coordin": [0, 3], "copi": [], "correct": 3, "correspond": 2, "cosin": 2, "count": 0, "coupl": [], "cout": 0, "creat": [0, 3], "critic": 3, "csalt": 0, "csaltcpp": 3, "csr": 3, "csrmatrix": [0, 3], "current": 0, "custom": 0, "d": [], "data": [1, 3], "data_access": [], "data_ptr": [], "debug": [0, 3], "decrement": [], "deduc": [], "deep": 0, "default": 0, "defin": [0, 2], "delet": 0, "demot": 3, "dens": 0, "dense_matrix": [], "densematrix": 3, "deriv": 0, "design": [0, 3], "destructor": 0, "detail": 3, "detect": [0, 3], "determin": [0, 1, 2], "develop": 0, "dia": 0, "diagon": 0, "differ": 0, "dimens": 0, "dimension": [0, 2, 3], "direct": 2, "directli": 0, "directori": 3, "disabl": [], "discard": [], "dispatch": 3, "displai": 0, "div_scalar": 1, "divid": [0, 1], "divis": 0, "divisor": 0, "dnesematrix": [], "do": 0, "doc": 3, "docstr": 3, "document": [1, 2], "doe": 0, "doesn": [], "domain_error": [], "don": [], "dot": [], "doubl": [0, 1, 2, 3], "down": 0, "doxygen": 3, "doxygenclass": [], "doxygenfunct": [], "doxygengroup": [], "dramat": 3, "duplic": 0, "dure": 3, "dynam": [0, 3], "e": [0, 3], "each": [0, 1, 2], "easi": 0, "effici": [0, 3], "either": [0, 2], "element": [0, 1, 2, 3], "elimin": 0, "ell": 0, "elsewher": 0, "empti": 0, "enabl": 0, "enclos": 0, "end": [2, 3], "endl": 0, "enforc": 0, "engin": [0, 3], "enhanc": 3, "ensematrix": [], "ensur": 3, "entri": 0, "equal": [0, 2], "equat": 0, "equival": [], "error": [0, 2, 3], "essenti": 0, "everi": [], "evolv": 3, "exactli": 0, "exampl": [0, 2], "except": 0, "execut": 0, "exist": 0, "expans": 0, "expect": [], "explicit": 0, "explicitli": 0, "extend": 0, "extens": 3, "face": [], "fail": [], "failur": 2, "fallback": 1, "fals": 0, "fast": [], "fast_set": [], "faster": 0, "fastinsert": [], "fem": [0, 3], "file": 3, "fill": 0, "final": [], "find": [], "first": [0, 2], "fix": [0, 2], "flag": [0, 1], "flat": 0, "flat_data": [], "flexibl": [0, 3], "float": [0, 1, 2, 3], "fork": 3, "form": [], "format": 0, "found": [], "framework": 0, "free": [], "from": [0, 1, 2], "front": 3, "full": [], "fulli": 0, "function": [0, 2], "fundament": 2, "further": [], "g": [0, 3], "gauss": 0, "gcc": 3, "gener": [0, 1], "get": [], "git": 3, "github": 3, "given": [0, 1, 2], "grid": 3, "group": [], "ha": 0, "hadamard": [], "hand": [0, 2], "handl": [], "hardwar": [], "have": [0, 2], "help": [], "here": 0, "high": [0, 3], "hold": 2, "home": [], "host": 3, "how": [], "howev": [], "hpp": 0, "html": 3, "http": 3, "human": 0, "i": [0, 1, 2, 3], "idea": 3, "ideal": 0, "ident": 0, "implement": [0, 1, 3], "imprecis": [], "improperli": [], "improv": [2, 3], "includ": [0, 2], "incompat": [], "inconsist": 0, "increment": 0, "independ": 0, "index": [0, 3], "indic": 1, "individu": 0, "infer": 0, "inherit": 0, "init": 0, "init_list": [], "init_ptr": [], "initi": [0, 3], "initializer_list": [], "inlin": 0, "inner": 2, "input": 2, "insert": [], "instal": 3, "instanc": 0, "instead": 0, "instruct": 0, "int": 0, "intend": 0, "interest": 1, "interfac": [0, 3], "intern": [0, 1, 3], "intuit": [], "inv": 0, "inva": [], "invalid": [0, 3], "invalid_argu": [0, 2], "invers": 3, "invert": 0, "involv": 3, "iostream": 0, "is_initi": [], "issu": [0, 3], "iter": 3, "its": 0, "j": 0, "jon": 3, "jonwebb": [], "jordan": 0, "k": [], "known": 0, "l": [], "lack": 3, "laid": 0, "larg": [0, 3], "later": 0, "layout": [0, 3], "leak": 3, "leav": [], "left": 0, "length": [0, 2], "level": 0, "librari": [0, 3], "lightweight": 0, "like": 2, "linear": [0, 2], "linux": 3, "list": [0, 3], "locat": 0, "lookup": [], "low": 0, "m": [0, 3], "magnitud": 2, "mai": [0, 1, 3], "main": 0, "maintain": [], "major": [0, 3], "make": 3, "make_uniqu": 0, "mani": 3, "manipul": [0, 3], "manner": [], "manual": 3, "march": 3, "mark": 0, "mat": 0, "mat1": 0, "mat2": 0, "mat_mul": 0, "match": [0, 2], "mathbf": 2, "mathemat": 2, "matric": [0, 3], "matrix": [1, 2], "matrixbas": [], "mavx": 3, "mean": [], "measur": 2, "member": [], "memori": [0, 3], "mesh": 3, "method": [], "mismatch": 2, "miss": [], "mit": 3, "mode": 3, "modern": 3, "modif": 3, "modifi": 0, "modul": 0, "modular": 3, "mostli": [], "move": [], "moved_to": [], "msse": 3, "mul": 1, "mul_scalar": 1, "multipl": 1, "multipli": [0, 1, 2], "must": [0, 3], "mutabl": [], "mutat": 0, "n": 2, "nativ": 3, "nest": 0, "new": [0, 2], "noexcept": 0, "non": 0, "none": [], "nonzero": [], "nonzero_count": [], "note": [], "now": 0, "nullptr": 0, "number": [0, 1, 2], "numer": [0, 2, 3], "o": 0, "object": 0, "offer": 3, "one": 0, "onli": [0, 3], "onlin": 3, "oper": 3, "operand": 0, "optim": [0, 3], "option": [0, 3], "order": 0, "origin": [0, 3], "orthogon": 2, "ostream": 0, "ostringstream": 0, "other": [0, 3], "otherwis": 0, "out": 0, "out_of_rang": 0, "outer": [], "output": [0, 2], "outsid": 0, "over": 3, "overlap": [], "overload": 3, "overrid": 0, "overwrit": [], "own": [], "ownership": 0, "p": 0, "page": 3, "pair": [0, 2], "parallelogram": 2, "param": 2, "paramet": [0, 1, 2], "partial": 0, "pass": [0, 3], "pattern": [], "pde": [0, 3], "per": 1, "perform": [0, 1, 2, 3], "pip": 3, "pivot": 0, "place": 0, "platform": 0, "point": 2, "pointer": [0, 2], "polymorph": 0, "popul": 0, "posit": 0, "post": [], "potenti": [], "precis": [], "present": [], "preserv": 0, "prevent": 3, "previous": 0, "primarili": 1, "print": [], "process": 1, "produc": [], "product": 0, "project": [2, 3], "promot": 3, "prone": 3, "proport": [], "provid": [0, 1, 3], "ptr": 0, "public": 0, "pull": 3, "python": 3, "python3": 3, "quad": 2, "queri": 1, "r": 3, "rais": 2, "rang": 0, "raw": [2, 3], "read": [0, 3], "readabl": 0, "real": 3, "reassign": 0, "recommend": [], "refer": 0, "regardless": [], "regist": 1, "regular": 0, "remain": [], "remov": [], "replac": 0, "repo": 3, "report": [], "repositori": 3, "repres": [0, 2], "represent": [], "request": 3, "requir": [0, 3], "reset": 0, "resolv": [], "resourc": 0, "result": [0, 1, 2], "retriev": 0, "return": [0, 2], "rh": [], "right": [0, 2], "row": 3, "rule": 2, "runtim": [0, 2, 3], "runtime_error": 0, "rvalu": 0, "safe": [0, 3], "safeti": [0, 3], "same": [0, 2], "scalar": [1, 2, 3], "scale": 0, "scan": 0, "scenario": 3, "scientif": [0, 3], "script": 3, "seamless": 3, "search": 3, "second": 2, "section": [1, 2], "see": 3, "select": 0, "self": [], "semant": 3, "separ": [], "set": [], "sever": [], "sh": 3, "shape": 0, "share": 0, "should": [], "show": 0, "side": [], "simd": [0, 2, 3], "simd_op": 1, "simd_trait": 1, "simd_width_doubl": 1, "simd_width_float": 1, "similar": [0, 2], "simul": [0, 3], "sinc": 0, "singl": [2, 3], "singular": 0, "size": [1, 2], "size_t": [1, 2], "slice": 0, "slt": [0, 2], "solv": 0, "solver": 3, "sort": [], "sourc": [0, 3], "space": 0, "span": 2, "sparcecoomatrix": [], "spars": 0, "sparsecoo_matrix": [], "sparsecoomatrix": [], "sparsecsr_matrix": [], "sparsecsrmatrix": [], "sparsiti": [0, 3], "special": 1, "specif": 0, "specifi": 0, "speed": [], "sphinx": 3, "squar": [0, 3], "sse": 1, "sse2": 1, "standard": 3, "start": [], "state": 0, "static": [0, 1, 3], "static_assert": [], "statu": 0, "std": [1, 2], "stdint": 0, "still": 3, "storag": 0, "store": 0, "stream": 0, "strongli": 3, "structur": [1, 3], "style": [0, 2], "sub": 1, "sub_scalar": 1, "subclass": 0, "submit": 3, "subtract": 1, "successfulli": 0, "sudo": 3, "suitabl": [], "sum": [0, 2], "sum_": 2, "support": [0, 1, 2, 3], "swap": 0, "switch": [0, 3], "syntax": [], "system": [0, 3], "t": [1, 2, 3], "take": [0, 2], "target": [0, 3], "tbd": 3, "templat": [0, 1, 2, 3], "temporari": 0, "test": 0, "thei": [], "them": [0, 3], "thi": [0, 1, 2, 3], "threshold": 3, "through": 0, "throw": [0, 2], "thrown": 0, "tightli": [], "time": [0, 1, 2, 3], "total": 0, "track": [0, 3], "transfer": 0, "transpos": 0, "transposit": [0, 3], "trigger": 0, "triplet": 0, "true": [0, 1], "two": [0, 1, 2], "txt": 3, "type": [0, 1, 2, 3], "typenam": [0, 1, 2], "typic": 0, "uint8_t": 0, "unabl": [], "under": 3, "underli": 0, "unequ": [], "uneven": [], "uniform": 0, "uniniti": [0, 3], "unintent": [], "uniqu": [], "unique_ptr": 0, "unit_test": 3, "unspecifi": 0, "untouch": [], "up": [], "updat": 3, "upon": 3, "us": [1, 2], "usag": 0, "user": [0, 1], "util": [0, 2], "val": [], "valgrind": 3, "valid": 0, "valu": [0, 2], "var": 1, "vari": 3, "variou": [], "vec": [], "vector": [1, 3], "venv": 3, "verbos": 3, "version": 3, "versu": [], "via": [0, 3], "violat": 0, "virtual": 0, "void": [0, 1, 2], "wa": 0, "wai": [], "webb": 3, "well": [], "when": 0, "where": [0, 2, 3], "whether": [0, 1], "which": 0, "while": 0, "who": 0, "whose": 0, "wide": 3, "width": [0, 1], "wise": [0, 1, 3], "wish": 0, "within": 0, "without": 0, "work": [0, 3], "would": 0, "wrap": 3, "wrapper": 0, "write": [0, 3], "x": 0, "xml": [], "you": 3, "zero": 0}, "titles": ["Matrix Overview", "SIMD Utilities", "Vector Operations", "Welcome to CSalt++ documentation!"], "titleterms": {"2d": [], "access": 0, "addit": 0, "arr": 0, "arrai": 0, "assign": [], "build": 3, "c": 0, "call": [], "case": [0, 3], "clons": 0, "cmake": 3, "col": 0, "const": 0, "constructor": 0, "contribut": 3, "copi": 0, "core": 3, "cross": 2, "csalt": 3, "data": 0, "data_ptr": 0, "dens": 3, "densematrix": 0, "depend": 3, "develop": 3, "dimens": [], "divis": [], "document": 3, "dot": 2, "element": [], "equal": [], "featur": [0, 3], "final": [], "fix": [], "flat": [], "flat_data": 0, "format": 3, "friend": [], "function": [], "get": [0, 3], "global": 0, "identifi": 0, "indic": 3, "init_list": 0, "init_ptr": 0, "initi": [], "initializer_list": 0, "instruct": 3, "invers": 0, "is_initi": 0, "kei": 0, "licens": 3, "list": [], "manag": 3, "matrix": [0, 3], "matrixbas": 0, "method": 0, "modul": 3, "move": 0, "multipl": 0, "muultipl": 0, "n": 0, "nonzero_count": 0, "oper": [0, 1, 2], "output": [], "overload": 0, "overview": 0, "plan": 3, "print": 0, "product": 2, "r": 0, "remov": 0, "row": 0, "run": 3, "scalar": 0, "set": 0, "simd": 1, "size": 0, "size_t": 0, "spars": 3, "sparsecoomatrix": 0, "sparsecsrmatrix": 0, "start": 3, "std": 0, "storag": [], "stream": [], "subtract": 0, "t": 0, "tabl": 3, "test": 3, "trait": 1, "tranpos": 0, "transpos": [], "typic": 3, "unit": 3, "updat": 0, "us": [0, 3], "util": 1, "vec": 0, "vector": [0, 2], "welcom": 3, "why": 3}})